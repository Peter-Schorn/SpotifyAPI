{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When performing a player command that is restricted, "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError"},{"type":"text","text":" will be returned.  It contains the following properties:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/message"},{"type":"text","text":": A short description of the cause of the error."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/reason"},{"type":"text","text":": A player error reason."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/statusCode"},{"type":"text","text":": The HTTP status code that is also returned in the response header."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unfortunately, there is a bug at the moment with the Spotify web API in which  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/ErrorReason\/unknown"},{"type":"text","text":" is return in cases where a more specific error would be expected. For example, trying to skip to the previous track when there is no previous track in the context returns this error instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/ErrorReason\/noPreviousTrack"},{"type":"text","text":"."}]},{"anchor":"Player-command-failed-No-active-device-found","level":2,"type":"heading","text":"“Player command failed: No active device found”"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Just because you have a Spotify client (e.g., the mobile app, the desktop application, or the web player) open does not necessarily mean it is considered an "},{"type":"emphasis","inlineContent":[{"type":"text","text":"active"}]},{"type":"text","text":" device, it just means that device is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"available"}]},{"type":"text","text":". When content is playing on a device, it is considered active. When playback ceases on a device, it typically becomes inactive only a few minutes later."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"While your program is running, you can use the "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.spotify.com\/console\/get-users-available-devices\/"},{"type":"text","text":" on the Spotify web API console—as well as the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/availableDevices()"},{"type":"text","text":" method in this library—to check which devices are active and\/or available."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For most player endpoints that accept a "},{"type":"codeVoice","code":"deviceId"},{"type":"text","text":" parameter, if you provide "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" (which is the default), then the active device is targeted. If there is no "},{"type":"emphasis","inlineContent":[{"type":"text","text":"active"}]},{"type":"text","text":" device, then the request will fail (even if there are "},{"type":"emphasis","inlineContent":[{"type":"text","text":"available"}]},{"type":"text","text":" devices) because it isn’t clear which device should be targeted for the command. Furthermore, providing the id of a non-active device will also cause the request to fail. In both cases, you must call "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/transferPlayback(to:play:)"},{"type":"text","text":" first in order to transfer playback to an available device, thereby making it active. On exception to the latter rule is the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/play(_:deviceId:)"},{"type":"text","text":" endpoint, which "},{"type":"emphasis","inlineContent":[{"type":"text","text":"does"}]},{"type":"text","text":" allow you to provide the id of a non-active device, even if there is currently an active device. Calling this endpoint with a non-active device will automatically transfer playback to that device, thereby making it active."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Below is a helper method for playing content on either the active device or the first available device found. It reduces the complexity of working with the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/play(_:deviceId:)"},{"type":"text","text":" endpoint."}]},{"type":"codeListing","syntax":"swift","code":["extension SpotifyAPI where AuthorizationManager: SpotifyScopeAuthorizationManager {","","    \/**","     Makes a call to `availableDevices()` and plays the content on the","     active device if one exists. Else, plays content on the first available","     device.","     ","     - Parameter playbackRequest: A request to play content.","     *\/","    func getAvailableDeviceThenPlay(","        _ playbackRequest: PlaybackRequest","    ) -> AnyPublisher<Void, Error> {","        ","        return self.availableDevices().flatMap {","            devices -> AnyPublisher<Void, Error> in","    ","            \/\/ A device must have an id and must not be restricted","            \/\/ in order to accept web API commands.","            let usableDevices = devices.filter { device in","                !device.isRestricted && device.id != nil","            }","","            \/\/ If there is an active device, then it's usually a good idea","            \/\/ to use that one. For example, if content is already playing,","            \/\/ then it will be playing on the active device. If not, then","            \/\/ just use the first available device.","            let device = usableDevices.first(where: \\.isActive)","                    ?? usableDevices.first","            ","            if let deviceId = device?.id {","                return self.play(playbackRequest, deviceId: deviceId)","            }","            else {","                return SpotifyGeneralError.other(","                    \"no active or available devices\",","                    localizedDescription:","                    \"There are no devices available to play content on. \" +","                    \"Try opening the Spotify app on one of your devices.\"","                )","                .anyFailingPublisher()","            }","            ","        }","        .eraseToAnyPublisher()","        ","    }","","}"]},{"anchor":"Playback-Request-Examples","level":2,"type":"heading","text":"Playback Request Examples"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Play a single track with playback starting at 10 seconds:"}]}]},{"type":"codeListing","syntax":"swift","code":["let track = \"spotify:track:6jvqaaUtBmcnxQnf5XKzFo\"","let playbackRequest = PlaybackRequest(track, positionMS: 10_000)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also provide an episode URI to this initializer."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Play a playlist:"}]}]},{"type":"codeListing","syntax":"swift","code":["let playlist = \"spotify:playlist:37i9dQZF1DXaQ34lqGBfrU\"","","let playbackRequest = PlaybackRequest(","    context: .contextURI(playlist),","    offset: nil",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first track that plays will depend on the user’s shuffle state."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Play a playlist starting at the second track:"}]}]},{"type":"codeListing","syntax":"swift","code":["let playlist = \"spotify:playlist:37i9dQZF1DXaQ34lqGBfrU\"","","let playbackRequest = PlaybackRequest(","    context: .contextURI(playlist),","    offset: .position(1)  \/\/ The offset is zero-indexed",")"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Play an album starting with a specific track:"}]}]},{"type":"codeListing","syntax":"swift","code":["let album = \"spotify:album:6QaVfG1pHYl1z15ZxkvVDW\"","let track = \"spotify:track:0xIuNHHcKI1JDuBPlSwzb1\"","","let playbackRequest = PlaybackRequest(","    context: .contextURI(album),","    offset: .uri(track)",")"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Play a list of tracks:"}]}]},{"type":"codeListing","syntax":"swift","code":["let tracks = [","    \"spotify:track:7JIV9UYKpti5xWgq6lfNNJ\",  \/\/ Ode to Viceroy","    \"spotify:track:1jhtxc7ON8ZzgvWGPwWXUN\",  \/\/ Baby Blue","    \"spotify:track:3JLrri1xSCui3bzITDJbkk\",  \/\/ The Rain Song","    \"spotify:track:6dsq7Nt5mIFzvm5kIYNORy\"   \/\/ 15 Step","]","","let playbackRequest = PlaybackRequest(","    context: .uris(tracks),","    offset: nil",")"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Play an episode within the the context of a show starting at 10 minutes:"}]}]},{"type":"codeListing","syntax":"swift","code":["let show = \"spotify:show:4rOoJ6Egrf8K2IrywzwOMk\"","let episode = \"spotify:episode:1saFhnv5h33EWizm2yKECl\"","","let playbackRequest = PlaybackRequest(","    context: .contextURI(show),","    offset: .uri(episode),","    positionMS: 600_000",")"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/spotifywebapi\/using-the-player-endpoints"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Using-the-Player-Endpoints","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Use the SpotifyAPI player endpoints."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Using the Player Endpoints","role":"article","modules":[{"name":"SpotifyWebAPI"}]},"hierarchy":{"paths":[["doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI"],["doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI","doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Saving-the-Authorization-Information-to-Persistent-Storage","doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Working-with-Paginated-Results","doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Debugging","doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Running-the-Unit-Tests"],"generated":true}],"references":{"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyPlayerError/ErrorReason/unknown":{"role":"symbol","title":"SpotifyPlayerError.ErrorReason.unknown","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"unknown"}],"abstract":[{"type":"text","text":"Certain actions are restricted because of unknown reasons."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/ErrorReason\/unknown","kind":"symbol","type":"topic","url":"\/documentation\/spotifywebapi\/spotifyplayererror\/errorreason\/unknown"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyAPI/availableDevices()":{"conformance":{"constraints":[{"type":"codeVoice","code":"AuthorizationManager"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SpotifyScopeAuthorizationManager"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"availableDevices()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"availableDevices"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Device","preciseIdentifier":"s:13SpotifyWebAPI6DeviceV"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Get the user’s available devices."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/availableDevices()","kind":"symbol","type":"topic","url":"\/documentation\/spotifywebapi\/spotifyapi\/availabledevices()"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyPlayerError/message":{"role":"symbol","title":"message","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"A short description of the cause of the error."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/message","kind":"symbol","type":"topic","url":"\/documentation\/spotifywebapi\/spotifyplayererror\/message"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyAPI/transferPlayback(to:play:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"AuthorizationManager"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SpotifyScopeAuthorizationManager"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"transferPlayback(to:play:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transferPlayback"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"play"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Transfer the user’s playback to a different device."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/transferPlayback(to:play:)","kind":"symbol","type":"topic","url":"\/documentation\/spotifywebapi\/spotifyapi\/transferplayback(to:play:)"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/Debugging":{"role":"article","title":"Debugging","abstract":[{"type":"text","text":"Debug issues and configure logging."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Debugging","kind":"article","type":"topic","url":"\/documentation\/spotifywebapi\/debugging"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/Running-the-Unit-Tests":{"role":"article","title":"Running the Unit Tests","abstract":[{"type":"text","text":"Run the unit tests and ensure your backend server is correctly configured."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Running-the-Unit-Tests","kind":"article","type":"topic","url":"\/documentation\/spotifywebapi\/running-the-unit-tests"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI":{"role":"collection","title":"SpotifyWebAPI","abstract":[{"type":"text","text":"A Swift library for the Spotify web API"}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI","kind":"symbol","type":"topic","url":"\/documentation\/spotifywebapi"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyPlayerError/reason":{"role":"symbol","title":"reason","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"reason"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SpotifyPlayerError","preciseIdentifier":"s:13SpotifyWebAPI0A11PlayerErrorV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ErrorReason","preciseIdentifier":"s:13SpotifyWebAPI0A11PlayerErrorV0E6ReasonO"}],"abstract":[{"type":"text","text":"A player error reason."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/reason","kind":"symbol","type":"topic","url":"\/documentation\/spotifywebapi\/spotifyplayererror\/reason"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyPlayerError/ErrorReason/noPreviousTrack":{"role":"symbol","title":"SpotifyPlayerError.ErrorReason.noPreviousTrack","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"noPreviousTrack"}],"abstract":[{"type":"text","text":"The command requires a previous track, but there is none in the"},{"type":"text","text":" "},{"type":"text","text":"context."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/ErrorReason\/noPreviousTrack","kind":"symbol","type":"topic","url":"\/documentation\/spotifywebapi\/spotifyplayererror\/errorreason\/noprevioustrack"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/Saving-the-Authorization-Information-to-Persistent-Storage":{"role":"article","title":"Saving the Authorization Information to Persistent Storage","abstract":[{"type":"text","text":"Save the authorization information to persistent storage so that the user does not have to login again every time the application is quit and re-launched."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Saving-the-Authorization-Information-to-Persistent-Storage","kind":"article","type":"topic","url":"\/documentation\/spotifywebapi\/saving-the-authorization-information-to-persistent-storage"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyPlayerError":{"role":"symbol","title":"SpotifyPlayerError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SpotifyPlayerError"}],"abstract":[{"type":"text","text":"The Spotify player error object. This is returned when making requests"},{"type":"text","text":" "},{"type":"text","text":"related to the player endpoints."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SpotifyPlayerError"}],"url":"\/documentation\/spotifywebapi\/spotifyplayererror"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyPlayerError/statusCode":{"role":"symbol","title":"statusCode","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"statusCode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"The HTTP status code that is also returned in the response header."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/statusCode","kind":"symbol","type":"topic","url":"\/documentation\/spotifywebapi\/spotifyplayererror\/statuscode"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/Working-with-Paginated-Results":{"role":"article","title":"Working with Paginated Results","abstract":[{"type":"text","text":"Retrieve additional pages from an endpoint that returns paginated results."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Working-with-Paginated-Results","kind":"article","type":"topic","url":"\/documentation\/spotifywebapi\/working-with-paginated-results"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyAPI/play(_:deviceId:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"AuthorizationManager"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SpotifyScopeAuthorizationManager"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"play(_:deviceId:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"play"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"PlaybackRequest","preciseIdentifier":"s:13SpotifyWebAPI15PlaybackRequestV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"deviceId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Play content for the current user."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/play(_:deviceId:)","kind":"symbol","type":"topic","url":"\/documentation\/spotifywebapi\/spotifyapi\/play(_:deviceid:)"},"https://developer.spotify.com/console/get-users-available-devices/":{"title":"available devices endpoint","titleInlineContent":[{"type":"text","text":"available devices endpoint"}],"type":"link","identifier":"https:\/\/developer.spotify.com\/console\/get-users-available-devices\/","url":"https:\/\/developer.spotify.com\/console\/get-users-available-devices\/"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyAPI":{"role":"symbol","title":"SpotifyAPI","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SpotifyAPI"}],"abstract":[{"type":"text","text":"The central class in this library. Provides methods for all of the Spotify web"},{"type":"text","text":" "},{"type":"text","text":"API endpoints and contains an authorization manager for managing the"},{"type":"text","text":" "},{"type":"text","text":"authorization process of your application."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SpotifyAPI"}],"url":"\/documentation\/spotifywebapi\/spotifyapi"}}}